version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Backend test
          command: |
            cd ./backend
            npm i
            npm run test

  analyze-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Scan backend dependencies 
          command: |
            cd ./backend
            npm i
            npm audit --audit-level=critical

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Backend build
          command: |
            cd ./backend
            npm i
            npm run build

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Frontend test
          command: |
            cd ./frontend
            npm i
            npm run test

  analyze-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Scan frontend dependencies 
          command: |
            cd ./frontend
            npm i
            npm audit --audit-level=critical

  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Frontend build
          command: |
            cd ./frontend
            npm i
            npm run build

#  est-backend:

#  can-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  test_analyze_build_project:
    jobs:
      - test-backend
      - analyze-backend:
          requires:
            - test-backend
      - build-backend:
          requires:
            - analyze-backend
      - test-frontend:
          requires:
            - build-backend
      - analyze-frontend:
          requires:
            - test-frontend
      - build-frontend:
          requires:
            - analyze-frontend
